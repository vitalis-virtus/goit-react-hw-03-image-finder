{"version":3,"sources":["serices/imageFinder-api.js","Component/ImageGallery/ImageGallery.js","Component/Searchbar/SearchBar.js","Component/Button/Button.js","Component/Modal/Modal.js","Component/ImageGalleryItem/ImageGalleryItem.js","App.js","index.js"],"names":["searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","ImageGallery","children","className","SearchBar","state","querry","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","autocomplete","autofocus","placeholder","Component","Button","onClickFunc","onClick","modalRoot","document","querySelector","Modal","handleKeydown","event","code","onClose","handleBackDropClick","target","window","addEventListener","removeEventListener","createPortal","ImageGalleryItem","id","webformatURL","description","itemClicked","src","alt","App","images","isLoading","error","showModal","modalImageURL","onChangeQuery","query","toggleModal","url","fetchImages","imageFinderApi","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","shouldRenderLoadMoreButton","length","map","image","largeImageURL","tags","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5ef4c04.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\n\r\nconst key = \"20359077-3bc8ecc9aab86af1558f74303\";\r\n\r\nconst fetchImages = ({ searchQuery = \"\", currentPage = 1, pageSize = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${key}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nexport default { fetchImages };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import ImageGalleryItem from \"../ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ children }) => {\r\n  return <ul className=\"ImageGallery\">{children}</ul>;\r\n};\r\n\r\n// const ImageGallery = ({ array, clickFunc }) => {\r\n//   return (\r\n//     <ul className=\"ImageGallery\">\r\n//       {array.map((image) => (\r\n//         <ImageGalleryItem\r\n//           key={image.id}\r\n//           id={image.id}\r\n//           webformatURL={image.webformatURL}\r\n//           largeImageURL={image.largeImageURL}\r\n//           description={image.tags}\r\n//           itemClicked={clickFunc}\r\n//         />\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SearchBar extends Component {\r\n  state = { querry: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ querry: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.querry);\r\n    this.setState({ querry: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.querry}\r\n            onChange={this.handleChange}\r\n            autocomplete=\"off\"\r\n            autofocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ onClickFunc }) => {\r\n  return (\r\n    <button type=\"button\" onClick={onClickFunc} className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClickFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackDropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackDropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL, description, itemClicked }) => {\r\n  const clickFunc = () => {\r\n    itemClicked(webformatURL);\r\n  };\r\n  return (\r\n    <li className=\"ImageGalleryItem\" key={id} onClick={clickFunc}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={description}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  itemClicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"./styles.css\";\n\nimport imageFinderApi from \"./serices/imageFinder-api\";\n\nimport ImageGallery from \"./Component/ImageGallery\";\nimport SearchBar from \"./Component/Searchbar\";\nimport Button from \"./Component/Button\";\nimport Modal from \"./Component/Modal\";\nimport ImageGalleryItem from \"./Component/ImageGalleryItem\";\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    error: null,\n    showModal: false,\n    modalImageURL: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = (query) => {\n    this.setState({\n      images: [],\n      currentPage: 1,\n      searchQuery: query,\n      isLoading: false,\n      error: null,\n    });\n  };\n\n  toggleModal = (url) => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      modalImageURL: url,\n    }));\n  };\n\n  fetchImages = () => {\n    this.setState({ isLoading: true });\n\n    const { searchQuery, currentPage } = this.state;\n    const fetchOptions = { searchQuery, currentPage };\n\n    imageFinderApi\n      .fetchImages(fetchOptions)\n      .then((images) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => {\n        if (this.state.currentPage > 2) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    const { images, isLoading, modalImageURL, showModal, error } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    return (\n      <div>\n        {error && <h1>Не удалось загрузить картинки</h1>}\n        <SearchBar onSubmit={this.onChangeQuery} />\n        <ImageGallery>\n          {/* <ImageGallery array={images} clickFunc={this.toggleModal}> */}\n          {images.map((image) => (\n            <ImageGalleryItem\n              key={image.id}\n              id={image.id}\n              webformatURL={image.webformatURL}\n              largeImageURL={image.largeImageURL}\n              description={image.tags}\n              itemClicked={this.toggleModal}\n            />\n          ))}\n        </ImageGallery>\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={modalImageURL} alt=\"\" />\n          </Modal>\n        )}\n        {shouldRenderLoadMoreButton && (\n          <Button onClickFunc={this.fetchImages} />\n        )}\n        {isLoading && (\n          <Loader\n            type=\"Oval\"\n            color=\"#4D4B4E\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n            className=\"Spinner\"\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}